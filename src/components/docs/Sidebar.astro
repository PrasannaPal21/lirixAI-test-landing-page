---
export interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;
---

<div class="lg:block">
  <!-- Mobile menu toggle button - only visible on small screens -->
  <button id="mobile-menu-toggle" class="lg:hidden w-full flex items-center justify-between px-3 py-2 text-gray-700 bg-gray-100 rounded-md mb-2">
    <span class="font-medium">Documentation Menu</span>
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>

  <!-- Navigation menu - hidden by default on mobile -->
  <nav id="sidebar-nav" class="hidden lg:block space-y-1 bg-white p-2 rounded-md shadow-sm">
    <h3 class="font-medium text-gray-900 mb-2">Documentation</h3>
    <a href="/documentation/getting-started" class={`block px-3 py-1.5 rounded-md ${currentPath.includes('getting-started') ? 'bg-blue-50 text-blue-600' : 'text-gray-700 hover:bg-gray-50'}`}>
      Getting Started
    </a>
    <a href="/documentation/how-to-install" class={`block px-3 py-1.5 rounded-md ${currentPath.includes('how-to-install') ? 'bg-blue-50 text-blue-600' : 'text-gray-700 hover:bg-gray-50'}`}>
      How to Install
    </a>
    <a href="/documentation/getting-help" class={`block px-3 py-1.5 rounded-md ${currentPath.includes('getting-help') ? 'bg-blue-50 text-blue-600' : 'text-gray-700 hover:bg-gray-50'}`}>
      Getting Help
    </a>
    
    <h3 class="font-medium text-gray-900 mt-4 mb-2">Advanced</h3>
    
    <!-- Add more navigation items following the same pattern -->
  </nav>
</div>

<script>
  // Toggle mobile menu
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const sidebarNav = document.getElementById('sidebar-nav');
  
  if (mobileMenuToggle && sidebarNav) {
    mobileMenuToggle.addEventListener('click', () => {
      sidebarNav.classList.toggle('hidden');
      
      // Toggle the arrow direction
      const arrow = mobileMenuToggle.querySelector('svg');
      if (arrow) {
        if (sidebarNav.classList.contains('hidden')) {
          arrow.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />';
        } else {
          arrow.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />';
        }
      }
    });
  }
  
  // Show the menu by default on larger screens
  function handleResize() {
    if (window.innerWidth >= 1024 && sidebarNav) { // 1024px is the lg breakpoint in Tailwind
      sidebarNav.classList.remove('hidden');
    } else if (sidebarNav) {
      sidebarNav.classList.add('hidden');
    }
  }
  
  // Run on page load and when window resizes
  window.addEventListener('resize', handleResize);
  handleResize();
</script> 